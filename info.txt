-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pStmt -> Stmt                               (1)
	%start_pListStmt -> ListStmt                       (2)
	%start_pElif -> Elif                               (3)
	%start_pListElif -> ListElif                       (4)
	%start_pExp -> Exp                                 (5)
	%start_pExp1 -> Exp1                               (6)
	%start_pExp2 -> Exp2                               (7)
	%start_pExp3 -> Exp3                               (8)
	%start_pExp4 -> Exp4                               (9)
	%start_pExp5 -> Exp5                               (10)
	%start_pExp6 -> Exp6                               (11)
	%start_pExp7 -> Exp7                               (12)
	%start_pExp8 -> Exp8                               (13)
	%start_pListExp -> ListExp                         (14)
	%start_pType -> Type                               (15)
	%start_pListType -> ListType                       (16)
	%start_pVarDecl -> VarDecl                         (17)
	%start_pListVarDecl -> ListVarDecl                 (18)
	Ident -> L_ident                                   (19)
	Integer -> L_integ                                 (20)
	Program -> ListStmt                                (21)
	Stmt -> Exp                                        (22)
	Stmt -> Exp '=' Exp                                (23)
	Stmt -> Exp '+=' Exp                               (24)
	Stmt -> Exp '-=' Exp                               (25)
	Stmt -> Exp '*=' Exp                               (26)
	Stmt -> Exp '/=' Exp                               (27)
	Stmt -> 'pass'                                     (28)
	Stmt -> 'return'                                   (29)
	Stmt -> 'return' Exp                               (30)
	Stmt -> 'break'                                    (31)
	Stmt -> 'continue'                                 (32)
	Stmt -> 'print' Exp                                (33)
	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif     (34)
	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif 'else' ':' '{' ListStmt '}'   (35)
	Stmt -> 'while' Exp ':' '{' ListStmt '}'           (36)
	Stmt -> Type Ident '=' Exp                         (37)
	Stmt -> Type Ident '(' ListVarDecl ')' ':' '{' ListStmt '}'   (38)
	Stmt -> Type Ident '(' ')' ':' '{' ListStmt '}'    (39)
	ListStmt ->                                        (40)
	ListStmt -> Stmt                                   (41)
	ListStmt -> Stmt ';' ListStmt                      (42)
	Elif -> 'elif' Exp ':' '{' ListStmt '}'            (43)
	ListElif ->                                        (44)
	ListElif -> ListElif Elif                          (45)
	Exp -> Type '(' ListVarDecl ')' '->' Exp           (46)
	Exp -> Type '(' ')' '->' Exp                       (47)
	Exp -> Exp1                                        (48)
	Exp1 -> Exp1 'or' Exp2                             (49)
	Exp1 -> Exp2                                       (50)
	Exp2 -> Exp2 'and' Exp3                            (51)
	Exp2 -> Exp3                                       (52)
	Exp3 -> 'not' Exp4                                 (53)
	Exp3 -> Exp4                                       (54)
	Exp4 -> Exp4 '==' Exp5                             (55)
	Exp4 -> Exp4 '!=' Exp5                             (56)
	Exp4 -> Exp4 '<' Exp5                              (57)
	Exp4 -> Exp4 '<=' Exp5                             (58)
	Exp4 -> Exp4 '>' Exp5                              (59)
	Exp4 -> Exp4 '>=' Exp5                             (60)
	Exp4 -> Exp5                                       (61)
	Exp5 -> Exp5 '+' Exp6                              (62)
	Exp5 -> Exp5 '-' Exp6                              (63)
	Exp5 -> Exp6                                       (64)
	Exp6 -> Exp6 '*' Exp7                              (65)
	Exp6 -> Exp6 '/' Exp7                              (66)
	Exp6 -> Exp7                                       (67)
	Exp7 -> '+' Exp8                                   (68)
	Exp7 -> '-' Exp8                                   (69)
	Exp7 -> Exp8                                       (70)
	Exp8 -> Ident                                      (71)
	Exp8 -> Integer                                    (72)
	Exp8 -> 'true'                                     (73)
	Exp8 -> 'false'                                    (74)
	Exp8 -> '[' ListExp ']'                            (75)
	Exp8 -> '[' Exp 'times' Integer ']'                (76)
	Exp8 -> Exp8 '(' ListExp ')'                       (77)
	Exp8 -> Exp8 '[' Exp ']'                           (78)
	Exp8 -> '(' Exp ')'                                (79)
	ListExp ->                                         (80)
	ListExp -> Exp                                     (81)
	ListExp -> Exp ',' ListExp                         (82)
	Type -> 'void'                                     (83)
	Type -> 'int'                                      (84)
	Type -> 'bool'                                     (85)
	Type -> Type '[' Integer ']'                       (86)
	Type -> Type '(' ListType ')'                      (87)
	Type -> Type '(' ')'                               (88)
	Type -> Type '&'                                   (89)
	ListType -> Type                                   (90)
	ListType -> Type ',' ListType                      (91)
	VarDecl -> Type Ident                              (92)
	ListVarDecl -> VarDecl                             (93)
	ListVarDecl -> VarDecl ',' ListVarDecl             (94)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'&'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'*='           { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	'+='           { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'-='           { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	'/='           { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	']'            { PT _ (TS _ 24) }
	'and'          { PT _ (TS _ 25) }
	'bool'         { PT _ (TS _ 26) }
	'break'        { PT _ (TS _ 27) }
	'continue'     { PT _ (TS _ 28) }
	'elif'         { PT _ (TS _ 29) }
	'else'         { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'not'          { PT _ (TS _ 34) }
	'or'           { PT _ (TS _ 35) }
	'pass'         { PT _ (TS _ 36) }
	'print'        { PT _ (TS _ 37) }
	'return'       { PT _ (TS _ 38) }
	'times'        { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'{'            { PT _ (TS _ 43) }
	'}'            { PT _ (TS _ 44) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pStmt    rule  1
	%start_pListStmt rule  2
	%start_pElif    rule  3
	%start_pListElif rule  4
	%start_pExp     rule  5
	%start_pExp1    rule  6
	%start_pExp2    rule  7
	%start_pExp3    rule  8
	%start_pExp4    rule  9
	%start_pExp5    rule  10
	%start_pExp6    rule  11
	%start_pExp7    rule  12
	%start_pExp8    rule  13
	%start_pListExp rule  14
	%start_pType    rule  15
	%start_pListType rule  16
	%start_pVarDecl rule  17
	%start_pListVarDecl rule  18
	Ident           rule  19
	Integer         rule  20
	Program         rule  21
	Stmt            rules 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
	ListStmt        rules 40, 41, 42
	Elif            rule  43
	ListElif        rules 44, 45
	Exp             rules 46, 47, 48
	Exp1            rules 49, 50
	Exp2            rules 51, 52
	Exp3            rules 53, 54
	Exp4            rules 55, 56, 57, 58, 59, 60, 61
	Exp5            rules 62, 63, 64
	Exp6            rules 65, 66, 67
	Exp7            rules 68, 69, 70
	Exp8            rules 71, 72, 73, 74, 75, 76, 77, 78, 79
	ListExp         rules 80, 81, 82
	Type            rules 83, 84, 85, 86, 87, 88, 89
	ListType        rules 90, 91
	VarDecl         rule  92
	ListVarDecl     rules 93, 94

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51
	%eof           reduce using rule 40

	Ident          goto state 31
	Integer        goto state 32
	Program        goto state 76
	Stmt           goto state 64
	ListStmt       goto state 77
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 1


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 75
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 2


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51
	%eof           reduce using rule 40

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 65
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 3


	'elif'         shift, and enter state 63

	Elif           goto state 62

State 4


	'elif'         reduce using rule 44
	%eof           reduce using rule 44

	ListElif       goto state 61

State 5


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 60
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 6


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp1           goto state 59
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 7


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp2           goto state 58
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 8


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp3           goto state 57
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 9


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp4           goto state 56
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 10


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 55
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 11


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp6           goto state 54
	Exp7           goto state 40
	Exp8           goto state 41

State 12


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp7           goto state 53
	Exp8           goto state 41

State 13


	'('            shift, and enter state 44
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp8           goto state 52

State 14


	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51
	%eof           reduce using rule 80

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 33
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	ListExp        goto state 42
	Type           goto state 43

State 15


	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 30

State 16


	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 28
	ListType       goto state 29

State 17


	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 21
	VarDecl        goto state 27

State 18


	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 21
	VarDecl        goto state 22
	ListVarDecl    goto state 23

State 19


	L_ident        shift, and enter state 20


State 20

	Ident -> L_ident .                                  (rule 19)

	'!='           reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'*='           reduce using rule 19
	'+'            reduce using rule 19
	'+='           reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'-='           reduce using rule 19
	'/'            reduce using rule 19
	'/='           reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'and'          reduce using rule 19
	'or'           reduce using rule 19
	'times'        reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19


State 21

	Type -> Type . '[' Integer ']'                      (rule 86)
	Type -> Type . '(' ListType ')'                     (rule 87)
	Type -> Type . '(' ')'                              (rule 88)
	Type -> Type . '&'                                  (rule 89)
	VarDecl -> Type . Ident                             (rule 92)

	'&'            shift, and enter state 83
	'('            shift, and enter state 115
	'['            shift, and enter state 85
	L_ident        shift, and enter state 20

	Ident          goto state 118

State 22

	ListVarDecl -> VarDecl .                            (rule 93)
	ListVarDecl -> VarDecl . ',' ListVarDecl            (rule 94)

	')'            reduce using rule 93
	','            shift, and enter state 117
	%eof           reduce using rule 93


State 23

	%start_pListVarDecl -> ListVarDecl .                (rule 18)

	%eof           accept


State 24

	Type -> 'bool' .                                    (rule 85)

	'&'            reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	','            reduce using rule 85
	'['            reduce using rule 85
	L_ident        reduce using rule 85
	%eof           reduce using rule 85


State 25

	Type -> 'int' .                                     (rule 84)

	'&'            reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	','            reduce using rule 84
	'['            reduce using rule 84
	L_ident        reduce using rule 84
	%eof           reduce using rule 84


State 26

	Type -> 'void' .                                    (rule 83)

	'&'            reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	','            reduce using rule 83
	'['            reduce using rule 83
	L_ident        reduce using rule 83
	%eof           reduce using rule 83


State 27

	%start_pVarDecl -> VarDecl .                        (rule 17)

	%eof           accept


State 28

	Type -> Type . '[' Integer ']'                      (rule 86)
	Type -> Type . '(' ListType ')'                     (rule 87)
	Type -> Type . '(' ')'                              (rule 88)
	Type -> Type . '&'                                  (rule 89)
	ListType -> Type .                                  (rule 90)
	ListType -> Type . ',' ListType                     (rule 91)

	'&'            shift, and enter state 83
	'('            shift, and enter state 115
	')'            reduce using rule 90
	','            shift, and enter state 116
	'['            shift, and enter state 85
	%eof           reduce using rule 90


State 29

	%start_pListType -> ListType .                      (rule 16)

	%eof           accept


State 30

	%start_pType -> Type .                              (rule 15)
	Type -> Type . '[' Integer ']'                      (rule 86)
	Type -> Type . '(' ListType ')'                     (rule 87)
	Type -> Type . '(' ')'                              (rule 88)
	Type -> Type . '&'                                  (rule 89)

	'&'            shift, and enter state 83
	'('            shift, and enter state 115
	'['            shift, and enter state 85
	%eof           accept


State 31

	Exp8 -> Ident .                                     (rule 71)

	'!='           reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'*='           reduce using rule 71
	'+'            reduce using rule 71
	'+='           reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'-='           reduce using rule 71
	'/'            reduce using rule 71
	'/='           reduce using rule 71
	':'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'and'          reduce using rule 71
	'or'           reduce using rule 71
	'times'        reduce using rule 71
	'}'            reduce using rule 71
	%eof           reduce using rule 71


State 32

	Exp8 -> Integer .                                   (rule 72)

	'!='           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'*='           reduce using rule 72
	'+'            reduce using rule 72
	'+='           reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'-='           reduce using rule 72
	'/'            reduce using rule 72
	'/='           reduce using rule 72
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'and'          reduce using rule 72
	'or'           reduce using rule 72
	'times'        reduce using rule 72
	'}'            reduce using rule 72
	%eof           reduce using rule 72


State 33

	ListExp -> Exp .                                    (rule 81)
	ListExp -> Exp . ',' ListExp                        (rule 82)

	')'            reduce using rule 81
	','            shift, and enter state 114
	']'            reduce using rule 81
	%eof           reduce using rule 81


State 34

	Exp -> Exp1 .                                       (rule 48)
	Exp1 -> Exp1 . 'or' Exp2                            (rule 49)

	')'            reduce using rule 48
	'*='           reduce using rule 48
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-='           reduce using rule 48
	'/='           reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'='            reduce using rule 48
	']'            reduce using rule 48
	'or'           shift, and enter state 94
	'times'        reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 35

	Exp1 -> Exp2 .                                      (rule 50)
	Exp2 -> Exp2 . 'and' Exp3                           (rule 51)

	')'            reduce using rule 50
	'*='           reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-='           reduce using rule 50
	'/='           reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'='            reduce using rule 50
	']'            reduce using rule 50
	'and'          shift, and enter state 95
	'or'           reduce using rule 50
	'times'        reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


State 36

	Exp2 -> Exp3 .                                      (rule 52)

	')'            reduce using rule 52
	'*='           reduce using rule 52
	'+='           reduce using rule 52
	','            reduce using rule 52
	'-='           reduce using rule 52
	'/='           reduce using rule 52
	':'            reduce using rule 52
	';'            reduce using rule 52
	'='            reduce using rule 52
	']'            reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	'times'        reduce using rule 52
	'}'            reduce using rule 52
	%eof           reduce using rule 52


State 37

	Exp3 -> Exp4 .                                      (rule 54)
	Exp4 -> Exp4 . '==' Exp5                            (rule 55)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 56)
	Exp4 -> Exp4 . '<' Exp5                             (rule 57)
	Exp4 -> Exp4 . '<=' Exp5                            (rule 58)
	Exp4 -> Exp4 . '>' Exp5                             (rule 59)
	Exp4 -> Exp4 . '>=' Exp5                            (rule 60)

	'!='           shift, and enter state 96
	')'            reduce using rule 54
	'*='           reduce using rule 54
	'+='           reduce using rule 54
	','            reduce using rule 54
	'-='           reduce using rule 54
	'/='           reduce using rule 54
	':'            reduce using rule 54
	';'            reduce using rule 54
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'='            reduce using rule 54
	'=='           shift, and enter state 99
	'>'            shift, and enter state 100
	'>='           shift, and enter state 101
	']'            reduce using rule 54
	'and'          reduce using rule 54
	'or'           reduce using rule 54
	'times'        reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 38

	Exp4 -> Exp5 .                                      (rule 61)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 61
	')'            reduce using rule 61
	'*='           reduce using rule 61
	'+'            shift, and enter state 102
	'+='           reduce using rule 61
	','            reduce using rule 61
	'-'            shift, and enter state 103
	'-='           reduce using rule 61
	'/='           reduce using rule 61
	':'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'and'          reduce using rule 61
	'or'           reduce using rule 61
	'times'        reduce using rule 61
	'}'            reduce using rule 61
	%eof           reduce using rule 61


State 39

	Exp5 -> Exp6 .                                      (rule 64)
	Exp6 -> Exp6 . '*' Exp7                             (rule 65)
	Exp6 -> Exp6 . '/' Exp7                             (rule 66)

	'!='           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 104
	'*='           reduce using rule 64
	'+'            reduce using rule 64
	'+='           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'-='           reduce using rule 64
	'/'            shift, and enter state 105
	'/='           reduce using rule 64
	':'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64
	'times'        reduce using rule 64
	'}'            reduce using rule 64
	%eof           reduce using rule 64


State 40

	Exp6 -> Exp7 .                                      (rule 67)

	'!='           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'*='           reduce using rule 67
	'+'            reduce using rule 67
	'+='           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'-='           reduce using rule 67
	'/'            reduce using rule 67
	'/='           reduce using rule 67
	':'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67
	'times'        reduce using rule 67
	'}'            reduce using rule 67
	%eof           reduce using rule 67


State 41

	Exp7 -> Exp8 .                                      (rule 70)
	Exp8 -> Exp8 . '(' ListExp ')'                      (rule 77)
	Exp8 -> Exp8 . '[' Exp ']'                          (rule 78)

	'!='           reduce using rule 70
	'('            shift, and enter state 106
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'*='           reduce using rule 70
	'+'            reduce using rule 70
	'+='           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'-='           reduce using rule 70
	'/'            reduce using rule 70
	'/='           reduce using rule 70
	':'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'['            shift, and enter state 107
	']'            reduce using rule 70
	'and'          reduce using rule 70
	'or'           reduce using rule 70
	'times'        reduce using rule 70
	'}'            reduce using rule 70
	%eof           reduce using rule 70


State 42

	%start_pListExp -> ListExp .                        (rule 14)

	%eof           accept


State 43

	Exp -> Type . '(' ListVarDecl ')' '->' Exp          (rule 46)
	Exp -> Type . '(' ')' '->' Exp                      (rule 47)
	Type -> Type . '[' Integer ']'                      (rule 86)
	Type -> Type . '(' ListType ')'                     (rule 87)
	Type -> Type . '(' ')'                              (rule 88)
	Type -> Type . '&'                                  (rule 89)

	'&'            shift, and enter state 83
	'('            shift, and enter state 84
	'['            shift, and enter state 85


State 44

	Exp8 -> '(' . Exp ')'                               (rule 79)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 113
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 45

	Exp7 -> '+' . Exp8                                  (rule 68)

	'('            shift, and enter state 44
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp8           goto state 112

State 46

	Exp7 -> '-' . Exp8                                  (rule 69)

	'('            shift, and enter state 44
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp8           goto state 111

State 47

	Exp8 -> '[' . ListExp ']'                           (rule 75)
	Exp8 -> '[' . Exp 'times' Integer ']'               (rule 76)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	']'            reduce using rule 80
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 109
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	ListExp        goto state 110
	Type           goto state 43

State 48

	Exp8 -> 'false' .                                   (rule 74)

	'!='           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'*='           reduce using rule 74
	'+'            reduce using rule 74
	'+='           reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'-='           reduce using rule 74
	'/'            reduce using rule 74
	'/='           reduce using rule 74
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'='            reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74
	'times'        reduce using rule 74
	'}'            reduce using rule 74
	%eof           reduce using rule 74


State 49

	Exp3 -> 'not' . Exp4                                (rule 53)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp4           goto state 108
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 50

	Exp8 -> 'true' .                                    (rule 73)

	'!='           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'*='           reduce using rule 73
	'+'            reduce using rule 73
	'+='           reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'-='           reduce using rule 73
	'/'            reduce using rule 73
	'/='           reduce using rule 73
	':'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'='            reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'['            reduce using rule 73
	']'            reduce using rule 73
	'and'          reduce using rule 73
	'or'           reduce using rule 73
	'times'        reduce using rule 73
	'}'            reduce using rule 73
	%eof           reduce using rule 73


State 51

	Integer -> L_integ .                                (rule 20)

	'!='           reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'*='           reduce using rule 20
	'+'            reduce using rule 20
	'+='           reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'-='           reduce using rule 20
	'/'            reduce using rule 20
	'/='           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	'and'          reduce using rule 20
	'or'           reduce using rule 20
	'times'        reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 52

	%start_pExp8 -> Exp8 .                              (rule 13)
	Exp8 -> Exp8 . '(' ListExp ')'                      (rule 77)
	Exp8 -> Exp8 . '[' Exp ']'                          (rule 78)

	'('            shift, and enter state 106
	'['            shift, and enter state 107
	%eof           accept


State 53

	%start_pExp7 -> Exp7 .                              (rule 12)

	%eof           accept


State 54

	%start_pExp6 -> Exp6 .                              (rule 11)
	Exp6 -> Exp6 . '*' Exp7                             (rule 65)
	Exp6 -> Exp6 . '/' Exp7                             (rule 66)

	'*'            shift, and enter state 104
	'/'            shift, and enter state 105
	%eof           accept


State 55

	%start_pExp5 -> Exp5 .                              (rule 10)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'+'            shift, and enter state 102
	'-'            shift, and enter state 103
	%eof           accept


State 56

	%start_pExp4 -> Exp4 .                              (rule 9)
	Exp4 -> Exp4 . '==' Exp5                            (rule 55)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 56)
	Exp4 -> Exp4 . '<' Exp5                             (rule 57)
	Exp4 -> Exp4 . '<=' Exp5                            (rule 58)
	Exp4 -> Exp4 . '>' Exp5                             (rule 59)
	Exp4 -> Exp4 . '>=' Exp5                            (rule 60)

	'!='           shift, and enter state 96
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'=='           shift, and enter state 99
	'>'            shift, and enter state 100
	'>='           shift, and enter state 101
	%eof           accept


State 57

	%start_pExp3 -> Exp3 .                              (rule 8)

	%eof           accept


State 58

	%start_pExp2 -> Exp2 .                              (rule 7)
	Exp2 -> Exp2 . 'and' Exp3                           (rule 51)

	'and'          shift, and enter state 95
	%eof           accept


State 59

	%start_pExp1 -> Exp1 .                              (rule 6)
	Exp1 -> Exp1 . 'or' Exp2                            (rule 49)

	'or'           shift, and enter state 94
	%eof           accept


State 60

	%start_pExp -> Exp .                                (rule 5)

	%eof           accept


State 61

	%start_pListElif -> ListElif .                      (rule 4)
	ListElif -> ListElif . Elif                         (rule 45)

	'elif'         shift, and enter state 63
	%eof           accept

	Elif           goto state 93

State 62

	%start_pElif -> Elif .                              (rule 3)

	%eof           accept


State 63

	Elif -> 'elif' . Exp ':' '{' ListStmt '}'           (rule 43)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 92
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 64

	ListStmt -> Stmt .                                  (rule 41)
	ListStmt -> Stmt . ';' ListStmt                     (rule 42)

	';'            shift, and enter state 91
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 65

	%start_pListStmt -> ListStmt .                      (rule 2)

	%eof           accept


State 66

	Stmt -> Exp .                                       (rule 22)
	Stmt -> Exp . '=' Exp                               (rule 23)
	Stmt -> Exp . '+=' Exp                              (rule 24)
	Stmt -> Exp . '-=' Exp                              (rule 25)
	Stmt -> Exp . '*=' Exp                              (rule 26)
	Stmt -> Exp . '/=' Exp                              (rule 27)

	'*='           shift, and enter state 86
	'+='           shift, and enter state 87
	'-='           shift, and enter state 88
	'/='           shift, and enter state 89
	';'            reduce using rule 22
	'='            shift, and enter state 90
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 67

	Stmt -> Type . Ident '=' Exp                        (rule 37)
	Stmt -> Type . Ident '(' ListVarDecl ')' ':' '{' ListStmt '}'    (rule 38)
	Stmt -> Type . Ident '(' ')' ':' '{' ListStmt '}'    (rule 39)
	Exp -> Type . '(' ListVarDecl ')' '->' Exp          (rule 46)
	Exp -> Type . '(' ')' '->' Exp                      (rule 47)
	Type -> Type . '[' Integer ']'                      (rule 86)
	Type -> Type . '(' ListType ')'                     (rule 87)
	Type -> Type . '(' ')'                              (rule 88)
	Type -> Type . '&'                                  (rule 89)

	'&'            shift, and enter state 83
	'('            shift, and enter state 84
	'['            shift, and enter state 85
	L_ident        shift, and enter state 20

	Ident          goto state 82

State 68

	Stmt -> 'break' .                                   (rule 31)

	';'            reduce using rule 31
	'}'            reduce using rule 31
	%eof           reduce using rule 31


State 69

	Stmt -> 'continue' .                                (rule 32)

	';'            reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 70

	Stmt -> 'if' . Exp ':' '{' ListStmt '}' ListElif    (rule 34)
	Stmt -> 'if' . Exp ':' '{' ListStmt '}' ListElif 'else' ':' '{' ListStmt '}'    (rule 35)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 81
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 71

	Stmt -> 'pass' .                                    (rule 28)

	';'            reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 72

	Stmt -> 'print' . Exp                               (rule 33)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 80
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 73

	Stmt -> 'return' .                                  (rule 29)
	Stmt -> 'return' . Exp                              (rule 30)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	';'            reduce using rule 29
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'}'            reduce using rule 29
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51
	%eof           reduce using rule 29

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 79
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 74

	Stmt -> 'while' . Exp ':' '{' ListStmt '}'          (rule 36)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 78
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 75

	%start_pStmt -> Stmt .                              (rule 1)

	%eof           accept


State 76

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 77

	Program -> ListStmt .                               (rule 21)

	%eof           reduce using rule 21


State 78

	Stmt -> 'while' Exp . ':' '{' ListStmt '}'          (rule 36)

	':'            shift, and enter state 155


State 79

	Stmt -> 'return' Exp .                              (rule 30)

	';'            reduce using rule 30
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 80

	Stmt -> 'print' Exp .                               (rule 33)

	';'            reduce using rule 33
	'}'            reduce using rule 33
	%eof           reduce using rule 33


State 81

	Stmt -> 'if' Exp . ':' '{' ListStmt '}' ListElif    (rule 34)
	Stmt -> 'if' Exp . ':' '{' ListStmt '}' ListElif 'else' ':' '{' ListStmt '}'    (rule 35)

	':'            shift, and enter state 154


State 82

	Stmt -> Type Ident . '=' Exp                        (rule 37)
	Stmt -> Type Ident . '(' ListVarDecl ')' ':' '{' ListStmt '}'    (rule 38)
	Stmt -> Type Ident . '(' ')' ':' '{' ListStmt '}'    (rule 39)

	'('            shift, and enter state 152
	'='            shift, and enter state 153


State 83

	Type -> Type '&' .                                  (rule 89)

	'&'            reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	','            reduce using rule 89
	'['            reduce using rule 89
	L_ident        reduce using rule 89
	%eof           reduce using rule 89


State 84

	Exp -> Type '(' . ListVarDecl ')' '->' Exp          (rule 46)
	Exp -> Type '(' . ')' '->' Exp                      (rule 47)
	Type -> Type '(' . ListType ')'                     (rule 87)
	Type -> Type '(' . ')'                              (rule 88)

	')'            shift, and enter state 151
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 149
	ListType       goto state 121
	VarDecl        goto state 22
	ListVarDecl    goto state 150

State 85

	Type -> Type '[' . Integer ']'                      (rule 86)

	L_integ        shift, and enter state 51

	Integer        goto state 148

State 86

	Stmt -> Exp '*=' . Exp                              (rule 26)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 147
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 87

	Stmt -> Exp '+=' . Exp                              (rule 24)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 146
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 88

	Stmt -> Exp '-=' . Exp                              (rule 25)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 145
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 89

	Stmt -> Exp '/=' . Exp                              (rule 27)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 144
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 90

	Stmt -> Exp '=' . Exp                               (rule 23)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 143
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 91

	ListStmt -> Stmt ';' . ListStmt                     (rule 42)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51
	%eof           reduce using rule 40

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 142
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 92

	Elif -> 'elif' Exp . ':' '{' ListStmt '}'           (rule 43)

	':'            shift, and enter state 141


State 93

	ListElif -> ListElif Elif .                         (rule 45)

	';'            reduce using rule 45
	'elif'         reduce using rule 45
	'else'         reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 94

	Exp1 -> Exp1 'or' . Exp2                            (rule 49)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp2           goto state 140
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 95

	Exp2 -> Exp2 'and' . Exp3                           (rule 51)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp3           goto state 139
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 96

	Exp4 -> Exp4 '!=' . Exp5                            (rule 56)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 138
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 97

	Exp4 -> Exp4 '<' . Exp5                             (rule 57)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 137
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 98

	Exp4 -> Exp4 '<=' . Exp5                            (rule 58)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 136
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 99

	Exp4 -> Exp4 '==' . Exp5                            (rule 55)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 135
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 100

	Exp4 -> Exp4 '>' . Exp5                             (rule 59)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 134
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 101

	Exp4 -> Exp4 '>=' . Exp5                            (rule 60)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp5           goto state 133
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41

State 102

	Exp5 -> Exp5 '+' . Exp6                             (rule 62)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp6           goto state 132
	Exp7           goto state 40
	Exp8           goto state 41

State 103

	Exp5 -> Exp5 '-' . Exp6                             (rule 63)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp6           goto state 131
	Exp7           goto state 40
	Exp8           goto state 41

State 104

	Exp6 -> Exp6 '*' . Exp7                             (rule 65)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp7           goto state 130
	Exp8           goto state 41

State 105

	Exp6 -> Exp6 '/' . Exp7                             (rule 66)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'false'        shift, and enter state 48
	'true'         shift, and enter state 50
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp7           goto state 129
	Exp8           goto state 41

State 106

	Exp8 -> Exp8 '(' . ListExp ')'                      (rule 77)

	'('            shift, and enter state 44
	')'            reduce using rule 80
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 33
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	ListExp        goto state 128
	Type           goto state 43

State 107

	Exp8 -> Exp8 '[' . Exp ']'                          (rule 78)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 127
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 108

	Exp3 -> 'not' Exp4 .                                (rule 53)
	Exp4 -> Exp4 . '==' Exp5                            (rule 55)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 56)
	Exp4 -> Exp4 . '<' Exp5                             (rule 57)
	Exp4 -> Exp4 . '<=' Exp5                            (rule 58)
	Exp4 -> Exp4 . '>' Exp5                             (rule 59)
	Exp4 -> Exp4 . '>=' Exp5                            (rule 60)

	'!='           shift, and enter state 96
	')'            reduce using rule 53
	'*='           reduce using rule 53
	'+='           reduce using rule 53
	','            reduce using rule 53
	'-='           reduce using rule 53
	'/='           reduce using rule 53
	':'            reduce using rule 53
	';'            reduce using rule 53
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'='            reduce using rule 53
	'=='           shift, and enter state 99
	'>'            shift, and enter state 100
	'>='           shift, and enter state 101
	']'            reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53
	'times'        reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 109

	Exp8 -> '[' Exp . 'times' Integer ']'               (rule 76)
	ListExp -> Exp .                                    (rule 81)
	ListExp -> Exp . ',' ListExp                        (rule 82)

	','            shift, and enter state 114
	']'            reduce using rule 81
	'times'        shift, and enter state 126


State 110

	Exp8 -> '[' ListExp . ']'                           (rule 75)

	']'            shift, and enter state 125


State 111

	Exp7 -> '-' Exp8 .                                  (rule 69)
	Exp8 -> Exp8 . '(' ListExp ')'                      (rule 77)
	Exp8 -> Exp8 . '[' Exp ']'                          (rule 78)

	'!='           reduce using rule 69
	'('            shift, and enter state 106
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'*='           reduce using rule 69
	'+'            reduce using rule 69
	'+='           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'-='           reduce using rule 69
	'/'            reduce using rule 69
	'/='           reduce using rule 69
	':'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'['            shift, and enter state 107
	']'            reduce using rule 69
	'and'          reduce using rule 69
	'or'           reduce using rule 69
	'times'        reduce using rule 69
	'}'            reduce using rule 69
	%eof           reduce using rule 69


State 112

	Exp7 -> '+' Exp8 .                                  (rule 68)
	Exp8 -> Exp8 . '(' ListExp ')'                      (rule 77)
	Exp8 -> Exp8 . '[' Exp ']'                          (rule 78)

	'!='           reduce using rule 68
	'('            shift, and enter state 106
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'*='           reduce using rule 68
	'+'            reduce using rule 68
	'+='           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'-='           reduce using rule 68
	'/'            reduce using rule 68
	'/='           reduce using rule 68
	':'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'['            shift, and enter state 107
	']'            reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68
	'times'        reduce using rule 68
	'}'            reduce using rule 68
	%eof           reduce using rule 68


State 113

	Exp8 -> '(' Exp . ')'                               (rule 79)

	')'            shift, and enter state 124


State 114

	ListExp -> Exp ',' . ListExp                        (rule 82)

	'('            shift, and enter state 44
	')'            reduce using rule 80
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	']'            reduce using rule 80
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51
	%eof           reduce using rule 80

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 33
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	ListExp        goto state 123
	Type           goto state 43

State 115

	Type -> Type '(' . ListType ')'                     (rule 87)
	Type -> Type '(' . ')'                              (rule 88)

	')'            shift, and enter state 122
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 28
	ListType       goto state 121

State 116

	ListType -> Type ',' . ListType                     (rule 91)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 28
	ListType       goto state 120

State 117

	ListVarDecl -> VarDecl ',' . ListVarDecl            (rule 94)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 21
	VarDecl        goto state 22
	ListVarDecl    goto state 119

State 118

	VarDecl -> Type Ident .                             (rule 92)

	')'            reduce using rule 92
	','            reduce using rule 92
	%eof           reduce using rule 92


State 119

	ListVarDecl -> VarDecl ',' ListVarDecl .            (rule 94)

	')'            reduce using rule 94
	%eof           reduce using rule 94


State 120

	ListType -> Type ',' ListType .                     (rule 91)

	')'            reduce using rule 91
	%eof           reduce using rule 91


State 121

	Type -> Type '(' ListType . ')'                     (rule 87)

	')'            shift, and enter state 168


State 122

	Type -> Type '(' ')' .                              (rule 88)

	'&'            reduce using rule 88
	'('            reduce using rule 88
	')'            reduce using rule 88
	','            reduce using rule 88
	'['            reduce using rule 88
	L_ident        reduce using rule 88
	%eof           reduce using rule 88


State 123

	ListExp -> Exp ',' ListExp .                        (rule 82)

	')'            reduce using rule 82
	']'            reduce using rule 82
	%eof           reduce using rule 82


State 124

	Exp8 -> '(' Exp ')' .                               (rule 79)

	'!='           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'*='           reduce using rule 79
	'+'            reduce using rule 79
	'+='           reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'-='           reduce using rule 79
	'/'            reduce using rule 79
	'/='           reduce using rule 79
	':'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'='            reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	'and'          reduce using rule 79
	'or'           reduce using rule 79
	'times'        reduce using rule 79
	'}'            reduce using rule 79
	%eof           reduce using rule 79


State 125

	Exp8 -> '[' ListExp ']' .                           (rule 75)

	'!='           reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'*='           reduce using rule 75
	'+'            reduce using rule 75
	'+='           reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'-='           reduce using rule 75
	'/'            reduce using rule 75
	'/='           reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'='            reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'['            reduce using rule 75
	']'            reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75
	'times'        reduce using rule 75
	'}'            reduce using rule 75
	%eof           reduce using rule 75


State 126

	Exp8 -> '[' Exp 'times' . Integer ']'               (rule 76)

	L_integ        shift, and enter state 51

	Integer        goto state 167

State 127

	Exp8 -> Exp8 '[' Exp . ']'                          (rule 78)

	']'            shift, and enter state 166


State 128

	Exp8 -> Exp8 '(' ListExp . ')'                      (rule 77)

	')'            shift, and enter state 165


State 129

	Exp6 -> Exp6 '/' Exp7 .                             (rule 66)

	'!='           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'*='           reduce using rule 66
	'+'            reduce using rule 66
	'+='           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'-='           reduce using rule 66
	'/'            reduce using rule 66
	'/='           reduce using rule 66
	':'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66
	'times'        reduce using rule 66
	'}'            reduce using rule 66
	%eof           reduce using rule 66


State 130

	Exp6 -> Exp6 '*' Exp7 .                             (rule 65)

	'!='           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'*='           reduce using rule 65
	'+'            reduce using rule 65
	'+='           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'-='           reduce using rule 65
	'/'            reduce using rule 65
	'/='           reduce using rule 65
	':'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65
	'times'        reduce using rule 65
	'}'            reduce using rule 65
	%eof           reduce using rule 65


State 131

	Exp5 -> Exp5 '-' Exp6 .                             (rule 63)
	Exp6 -> Exp6 . '*' Exp7                             (rule 65)
	Exp6 -> Exp6 . '/' Exp7                             (rule 66)

	'!='           reduce using rule 63
	')'            reduce using rule 63
	'*'            shift, and enter state 104
	'*='           reduce using rule 63
	'+'            reduce using rule 63
	'+='           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'-='           reduce using rule 63
	'/'            shift, and enter state 105
	'/='           reduce using rule 63
	':'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'and'          reduce using rule 63
	'or'           reduce using rule 63
	'times'        reduce using rule 63
	'}'            reduce using rule 63
	%eof           reduce using rule 63


State 132

	Exp5 -> Exp5 '+' Exp6 .                             (rule 62)
	Exp6 -> Exp6 . '*' Exp7                             (rule 65)
	Exp6 -> Exp6 . '/' Exp7                             (rule 66)

	'!='           reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 104
	'*='           reduce using rule 62
	'+'            reduce using rule 62
	'+='           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'-='           reduce using rule 62
	'/'            shift, and enter state 105
	'/='           reduce using rule 62
	':'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'and'          reduce using rule 62
	'or'           reduce using rule 62
	'times'        reduce using rule 62
	'}'            reduce using rule 62
	%eof           reduce using rule 62


State 133

	Exp4 -> Exp4 '>=' Exp5 .                            (rule 60)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 60
	')'            reduce using rule 60
	'*='           reduce using rule 60
	'+'            shift, and enter state 102
	'+='           reduce using rule 60
	','            reduce using rule 60
	'-'            shift, and enter state 103
	'-='           reduce using rule 60
	'/='           reduce using rule 60
	':'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60
	'times'        reduce using rule 60
	'}'            reduce using rule 60
	%eof           reduce using rule 60


State 134

	Exp4 -> Exp4 '>' Exp5 .                             (rule 59)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 59
	')'            reduce using rule 59
	'*='           reduce using rule 59
	'+'            shift, and enter state 102
	'+='           reduce using rule 59
	','            reduce using rule 59
	'-'            shift, and enter state 103
	'-='           reduce using rule 59
	'/='           reduce using rule 59
	':'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'and'          reduce using rule 59
	'or'           reduce using rule 59
	'times'        reduce using rule 59
	'}'            reduce using rule 59
	%eof           reduce using rule 59


State 135

	Exp4 -> Exp4 '==' Exp5 .                            (rule 55)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 55
	')'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            shift, and enter state 102
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            shift, and enter state 103
	'-='           reduce using rule 55
	'/='           reduce using rule 55
	':'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'and'          reduce using rule 55
	'or'           reduce using rule 55
	'times'        reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 136

	Exp4 -> Exp4 '<=' Exp5 .                            (rule 58)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 58
	')'            reduce using rule 58
	'*='           reduce using rule 58
	'+'            shift, and enter state 102
	'+='           reduce using rule 58
	','            reduce using rule 58
	'-'            shift, and enter state 103
	'-='           reduce using rule 58
	'/='           reduce using rule 58
	':'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'and'          reduce using rule 58
	'or'           reduce using rule 58
	'times'        reduce using rule 58
	'}'            reduce using rule 58
	%eof           reduce using rule 58


State 137

	Exp4 -> Exp4 '<' Exp5 .                             (rule 57)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 57
	')'            reduce using rule 57
	'*='           reduce using rule 57
	'+'            shift, and enter state 102
	'+='           reduce using rule 57
	','            reduce using rule 57
	'-'            shift, and enter state 103
	'-='           reduce using rule 57
	'/='           reduce using rule 57
	':'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'and'          reduce using rule 57
	'or'           reduce using rule 57
	'times'        reduce using rule 57
	'}'            reduce using rule 57
	%eof           reduce using rule 57


State 138

	Exp4 -> Exp4 '!=' Exp5 .                            (rule 56)
	Exp5 -> Exp5 . '+' Exp6                             (rule 62)
	Exp5 -> Exp5 . '-' Exp6                             (rule 63)

	'!='           reduce using rule 56
	')'            reduce using rule 56
	'*='           reduce using rule 56
	'+'            shift, and enter state 102
	'+='           reduce using rule 56
	','            reduce using rule 56
	'-'            shift, and enter state 103
	'-='           reduce using rule 56
	'/='           reduce using rule 56
	':'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	'times'        reduce using rule 56
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 139

	Exp2 -> Exp2 'and' Exp3 .                           (rule 51)

	')'            reduce using rule 51
	'*='           reduce using rule 51
	'+='           reduce using rule 51
	','            reduce using rule 51
	'-='           reduce using rule 51
	'/='           reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'='            reduce using rule 51
	']'            reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51
	'times'        reduce using rule 51
	'}'            reduce using rule 51
	%eof           reduce using rule 51


State 140

	Exp1 -> Exp1 'or' Exp2 .                            (rule 49)
	Exp2 -> Exp2 . 'and' Exp3                           (rule 51)

	')'            reduce using rule 49
	'*='           reduce using rule 49
	'+='           reduce using rule 49
	','            reduce using rule 49
	'-='           reduce using rule 49
	'/='           reduce using rule 49
	':'            reduce using rule 49
	';'            reduce using rule 49
	'='            reduce using rule 49
	']'            reduce using rule 49
	'and'          shift, and enter state 95
	'or'           reduce using rule 49
	'times'        reduce using rule 49
	'}'            reduce using rule 49
	%eof           reduce using rule 49


State 141

	Elif -> 'elif' Exp ':' . '{' ListStmt '}'           (rule 43)

	'{'            shift, and enter state 164


State 142

	ListStmt -> Stmt ';' ListStmt .                     (rule 42)

	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 143

	Stmt -> Exp '=' Exp .                               (rule 23)

	';'            reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 144

	Stmt -> Exp '/=' Exp .                              (rule 27)

	';'            reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 145

	Stmt -> Exp '-=' Exp .                              (rule 25)

	';'            reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 146

	Stmt -> Exp '+=' Exp .                              (rule 24)

	';'            reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 147

	Stmt -> Exp '*=' Exp .                              (rule 26)

	';'            reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 148

	Type -> Type '[' Integer . ']'                      (rule 86)

	']'            shift, and enter state 163


State 149

	Type -> Type . '[' Integer ']'                      (rule 86)
	Type -> Type . '(' ListType ')'                     (rule 87)
	Type -> Type . '(' ')'                              (rule 88)
	Type -> Type . '&'                                  (rule 89)
	ListType -> Type .                                  (rule 90)
	ListType -> Type . ',' ListType                     (rule 91)
	VarDecl -> Type . Ident                             (rule 92)

	'&'            shift, and enter state 83
	'('            shift, and enter state 115
	')'            reduce using rule 90
	','            shift, and enter state 116
	'['            shift, and enter state 85
	L_ident        shift, and enter state 20

	Ident          goto state 118

State 150

	Exp -> Type '(' ListVarDecl . ')' '->' Exp          (rule 46)

	')'            shift, and enter state 162


State 151

	Exp -> Type '(' ')' . '->' Exp                      (rule 47)
	Type -> Type '(' ')' .                              (rule 88)

	'&'            reduce using rule 88
	'('            reduce using rule 88
	'->'           shift, and enter state 161
	'['            reduce using rule 88
	L_ident        reduce using rule 88


State 152

	Stmt -> Type Ident '(' . ListVarDecl ')' ':' '{' ListStmt '}'    (rule 38)
	Stmt -> Type Ident '(' . ')' ':' '{' ListStmt '}'    (rule 39)

	')'            shift, and enter state 160
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 25
	'void'         shift, and enter state 26

	Type           goto state 21
	VarDecl        goto state 22
	ListVarDecl    goto state 159

State 153

	Stmt -> Type Ident '=' . Exp                        (rule 37)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 158
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 154

	Stmt -> 'if' Exp ':' . '{' ListStmt '}' ListElif    (rule 34)
	Stmt -> 'if' Exp ':' . '{' ListStmt '}' ListElif 'else' ':' '{' ListStmt '}'    (rule 35)

	'{'            shift, and enter state 157


State 155

	Stmt -> 'while' Exp ':' . '{' ListStmt '}'          (rule 36)

	'{'            shift, and enter state 156


State 156

	Stmt -> 'while' Exp ':' '{' . ListStmt '}'          (rule 36)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 176
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 157

	Stmt -> 'if' Exp ':' '{' . ListStmt '}' ListElif    (rule 34)
	Stmt -> 'if' Exp ':' '{' . ListStmt '}' ListElif 'else' ':' '{' ListStmt '}'    (rule 35)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 175
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 158

	Stmt -> Type Ident '=' Exp .                        (rule 37)

	';'            reduce using rule 37
	'}'            reduce using rule 37
	%eof           reduce using rule 37


State 159

	Stmt -> Type Ident '(' ListVarDecl . ')' ':' '{' ListStmt '}'    (rule 38)

	')'            shift, and enter state 174


State 160

	Stmt -> Type Ident '(' ')' . ':' '{' ListStmt '}'    (rule 39)

	':'            shift, and enter state 173


State 161

	Exp -> Type '(' ')' '->' . Exp                      (rule 47)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 172
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 162

	Exp -> Type '(' ListVarDecl ')' . '->' Exp          (rule 46)

	'->'           shift, and enter state 171


State 163

	Type -> Type '[' Integer ']' .                      (rule 86)

	'&'            reduce using rule 86
	'('            reduce using rule 86
	')'            reduce using rule 86
	','            reduce using rule 86
	'['            reduce using rule 86
	L_ident        reduce using rule 86
	%eof           reduce using rule 86


State 164

	Elif -> 'elif' Exp ':' '{' . ListStmt '}'           (rule 43)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 170
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 165

	Exp8 -> Exp8 '(' ListExp ')' .                      (rule 77)

	'!='           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'*='           reduce using rule 77
	'+'            reduce using rule 77
	'+='           reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'-='           reduce using rule 77
	'/'            reduce using rule 77
	'/='           reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'='            reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'['            reduce using rule 77
	']'            reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77
	'times'        reduce using rule 77
	'}'            reduce using rule 77
	%eof           reduce using rule 77


State 166

	Exp8 -> Exp8 '[' Exp ']' .                          (rule 78)

	'!='           reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'*='           reduce using rule 78
	'+'            reduce using rule 78
	'+='           reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'-='           reduce using rule 78
	'/'            reduce using rule 78
	'/='           reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'='            reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'['            reduce using rule 78
	']'            reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78
	'times'        reduce using rule 78
	'}'            reduce using rule 78
	%eof           reduce using rule 78


State 167

	Exp8 -> '[' Exp 'times' Integer . ']'               (rule 76)

	']'            shift, and enter state 169


State 168

	Type -> Type '(' ListType ')' .                     (rule 87)

	'&'            reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	','            reduce using rule 87
	'['            reduce using rule 87
	L_ident        reduce using rule 87
	%eof           reduce using rule 87


State 169

	Exp8 -> '[' Exp 'times' Integer ']' .               (rule 76)

	'!='           reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'*='           reduce using rule 76
	'+'            reduce using rule 76
	'+='           reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'-='           reduce using rule 76
	'/'            reduce using rule 76
	'/='           reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'='            reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'['            reduce using rule 76
	']'            reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76
	'times'        reduce using rule 76
	'}'            reduce using rule 76
	%eof           reduce using rule 76


State 170

	Elif -> 'elif' Exp ':' '{' ListStmt . '}'           (rule 43)

	'}'            shift, and enter state 182


State 171

	Exp -> Type '(' ListVarDecl ')' '->' . Exp          (rule 46)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 48
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Exp            goto state 181
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 43

State 172

	Exp -> Type '(' ')' '->' Exp .                      (rule 47)

	')'            reduce using rule 47
	'*='           reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-='           reduce using rule 47
	'/='           reduce using rule 47
	':'            reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	']'            reduce using rule 47
	'times'        reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 173

	Stmt -> Type Ident '(' ')' ':' . '{' ListStmt '}'    (rule 39)

	'{'            shift, and enter state 180


State 174

	Stmt -> Type Ident '(' ListVarDecl ')' . ':' '{' ListStmt '}'    (rule 38)

	':'            shift, and enter state 179


State 175

	Stmt -> 'if' Exp ':' '{' ListStmt . '}' ListElif    (rule 34)
	Stmt -> 'if' Exp ':' '{' ListStmt . '}' ListElif 'else' ':' '{' ListStmt '}'    (rule 35)

	'}'            shift, and enter state 178


State 176

	Stmt -> 'while' Exp ':' '{' ListStmt . '}'          (rule 36)

	'}'            shift, and enter state 177


State 177

	Stmt -> 'while' Exp ':' '{' ListStmt '}' .          (rule 36)

	';'            reduce using rule 36
	'}'            reduce using rule 36
	%eof           reduce using rule 36


State 178

	Stmt -> 'if' Exp ':' '{' ListStmt '}' . ListElif    (rule 34)
	Stmt -> 'if' Exp ':' '{' ListStmt '}' . ListElif 'else' ':' '{' ListStmt '}'    (rule 35)

	';'            reduce using rule 44
	'elif'         reduce using rule 44
	'else'         reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44

	ListElif       goto state 185

State 179

	Stmt -> Type Ident '(' ListVarDecl ')' ':' . '{' ListStmt '}'    (rule 38)

	'{'            shift, and enter state 184


State 180

	Stmt -> Type Ident '(' ')' ':' '{' . ListStmt '}'    (rule 39)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 183
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 181

	Exp -> Type '(' ListVarDecl ')' '->' Exp .          (rule 46)

	')'            reduce using rule 46
	'*='           reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-='           reduce using rule 46
	'/='           reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'='            reduce using rule 46
	']'            reduce using rule 46
	'times'        reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 182

	Elif -> 'elif' Exp ':' '{' ListStmt '}' .           (rule 43)

	';'            reduce using rule 43
	'elif'         reduce using rule 43
	'else'         reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 183

	Stmt -> Type Ident '(' ')' ':' '{' ListStmt . '}'    (rule 39)

	'}'            shift, and enter state 188


State 184

	Stmt -> Type Ident '(' ListVarDecl ')' ':' '{' . ListStmt '}'    (rule 38)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 187
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 185

	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif .    (rule 34)
	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif . 'else' ':' '{' ListStmt '}'    (rule 35)
	ListElif -> ListElif . Elif                         (rule 45)

	';'            reduce using rule 34
	'elif'         shift, and enter state 63
	'else'         shift, and enter state 186
	'}'            reduce using rule 34
	%eof           reduce using rule 34

	Elif           goto state 93

State 186

	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif 'else' . ':' '{' ListStmt '}'    (rule 35)

	':'            shift, and enter state 190


State 187

	Stmt -> Type Ident '(' ListVarDecl ')' ':' '{' ListStmt . '}'    (rule 38)

	'}'            shift, and enter state 189


State 188

	Stmt -> Type Ident '(' ')' ':' '{' ListStmt '}' .    (rule 39)

	';'            reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


State 189

	Stmt -> Type Ident '(' ListVarDecl ')' ':' '{' ListStmt '}' .    (rule 38)

	';'            reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 190

	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif 'else' ':' . '{' ListStmt '}'    (rule 35)

	'{'            shift, and enter state 191


State 191

	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif 'else' ':' '{' . ListStmt '}'    (rule 35)

	'('            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'['            shift, and enter state 47
	'bool'         shift, and enter state 24
	'break'        shift, and enter state 68
	'continue'     shift, and enter state 69
	'false'        shift, and enter state 48
	'if'           shift, and enter state 70
	'int'          shift, and enter state 25
	'not'          shift, and enter state 49
	'pass'         shift, and enter state 71
	'print'        shift, and enter state 72
	'return'       shift, and enter state 73
	'true'         shift, and enter state 50
	'void'         shift, and enter state 26
	'while'        shift, and enter state 74
	'}'            reduce using rule 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 51

	Ident          goto state 31
	Integer        goto state 32
	Stmt           goto state 64
	ListStmt       goto state 192
	Exp            goto state 66
	Exp1           goto state 34
	Exp2           goto state 35
	Exp3           goto state 36
	Exp4           goto state 37
	Exp5           goto state 38
	Exp6           goto state 39
	Exp7           goto state 40
	Exp8           goto state 41
	Type           goto state 67

State 192

	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif 'else' ':' '{' ListStmt . '}'    (rule 35)

	'}'            shift, and enter state 193


State 193

	Stmt -> 'if' Exp ':' '{' ListStmt '}' ListElif 'else' ':' '{' ListStmt '}' .    (rule 35)

	';'            reduce using rule 35
	'}'            reduce using rule 35
	%eof           reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 95
Number of terminals: 46
Number of non-terminals: 40
Number of states: 194
